# if you want to work with database and web uncomment db and nginx services if you need them
services:
  # db:
  #   image: mysql:8.0.40-debian
  #   environment:
  #     MYSQL_DATABASE: app
  #     MYSQL_ROOT_PASSWORD: pass
  #     MYSQL_USER: app
  #     MYSQL_PASSWORD: pass
  #   volumes:
  #     - ./docker/mysql_init_dev:/docker-entrypoint-initdb.d
  # nginx:
  #   image: nginx:latest
  #   volumes:
  #     - ./public:/var/www/html/public
  #     - ./docker/nginx/app_dev.conf:/etc/nginx/conf.d/default.conf
  #   ports:
  #     - "80:80"
  #   depends_on:
  #     - php
  php:
    container_name: appnameplaceholder
    # in case you have different than 1000 user id you gotta play around with creating same id user inside of container. check https://github.com/fa-fo-a/infrastructure/blob/dev_cli/Dockerfile_php_dev_cli
    user: "${USER_ID:-1000}:${USER_ID:-1000}"
    image: achertovsky/php-infrastructure:dev_fpm
    volumes:
      - ./:/var/www/html
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      # db:
      #   condition: service_started
      project-setup:
        condition: service_completed_successfully
  project-setup:
    # in case you have different than 1000 user id you gotta play around with creating same id user inside of container. check https://github.com/fa-fo-a/infrastructure/blob/dev_cli/Dockerfile_php_dev_cli
    user: "${USER_ID:-1000}:${USER_ID:-1000}"
    volumes:
      - ./:/var/www/html
    image: achertovsky/php-infrastructure:dev_cli
    # depends_on:
    #   - db
    # entrypoint with db migrations
    # entrypoint: ["sh", "-c", "composer i until bin/console -q d:m:m; do sleep 1; done && bin/console -q -etest d:m:m && bin/console cache:clear && bin/console -e test cache:clear"]
    entrypoint: ["sh", "-c", "composer i && bin/console cache:clear && bin/console -e test cache:clear"]
